import { createClient } from '@/utils/supabase/server'
import { Database } from '@/types/database.types'
import Trainer from './trainer-client'
import ThemeToggle from './theme-toggle'

const SQL_SCRIPT = `-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã ege9\ncreate table if not exists public.ege9 (\n  id bigint primary key generated always as identity,\n  text text not null,\n  answer integer not null\n);\n\n-- –í—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏–º–µ—Ä–æ–≤ –∑–∞–¥–∞—á\ninsert into public.ege9 (text, answer) values\n  ('–†–µ—à–∏—Ç–µ –∑–∞–¥–∞—á—É: 2 + 2 * 2 = ?', 6),\n  ('–í—ã—á–∏—Å–ª–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ: 5! / 3! = ?', 20);\n\n-- –í–∫–ª—é—á–∏—Ç—å RLS –∏ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —á—Ç–µ–Ω–∏–µ\nalter table public.ege9 enable row level security;\ncreate policy if not exists "Allow anonymous read access" on public.ege9 for select to anon using (true);`

type Task = Database['public']['Tables']['ege9']['Row']

export default async function Home() {
  const supabase = await createClient()
  const { data: tasks, error } = await supabase.from('ege9').select()

  return (
    <main className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-blue-50 via-white to-blue-100 dark:from-gray-900 dark:via-gray-950 dark:to-gray-900 transition-colors duration-500">
      <div className="fixed top-4 right-4 flex items-center gap-4 z-10">
        <ThemeToggle />
        <a href="/Excel-Tasks.xlsx" download className="p-2 rounded-full bg-green-500 text-white hover:bg-green-600 shadow-lg transition-colors" title="–°–∫–∞—á–∞—Ç—å Excel-—Ñ–∞–π–ª">üìä</a>
      </div>
      <header className="w-full flex flex-col items-center mt-8 mb-4">
        <h1 className="text-3xl md:text-4xl font-extrabold text-center mb-4 text-gray-900 dark:text-white drop-shadow-lg">–ï–ì–≠ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ: –ó–∞–¥–∞—á–∞ ‚Ññ9</h1>
      </header>
      <section className="w-full flex flex-col items-center mb-8">
        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —Ç–µ–ø–µ—Ä—å –æ—Ç–¥–µ–ª—å–Ω—ã–π –±–ª–æ–∫, Trainer —Å–∞–º –Ω–µ —Ä–∏—Å—É–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å */}
        {error || !tasks || tasks.length === 0 ? (
          <div className="p-4 bg-yellow-100 dark:bg-yellow-900 border border-yellow-400 text-yellow-700 dark:text-yellow-200 rounded mb-4 text-center">
            <p className="font-bold mb-2">–ó–∞–¥–∞—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ ege9 –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.</p>
            <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase.</p>
          </div>
        ) : (
          <Trainer tasks={tasks} />
        )}
      </section>
    </main>
  )
}
